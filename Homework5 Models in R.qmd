---
title: "Homework5 Models in R"
format: pdf
editor: visual
---

```{r, include=FALSE}
#Clearing the working environment
rm(list=ls())
```

## Task One: Conceptual Questions

### Question One: What is the purpose of using cross-validation when fitting a random forest model?

Cross-validation allows us to make use of the entire dataset that we have access to. It does this by creating equal sections of data (called "folds") and alternating which single fold is used for testing and what folds are grouped together for training. This reduces the chance of getting a weird model due to a weird training/testing split and gives a less variable estimate of the model since it uses more (all) of the data. 

### Question Two: Describe the bagged tree algorithm.

A bagged tree algorithm means that bootstrap aggregation is used in addition to the standard tree algorithm. Bootstrapping means that we are resampling either from the data (non-parametric) or from a fitted model (parametric). For each resample, we have a certain fitted tree. We can then use each tree to come up with a prediction, and then we can take the average of all of the predictions from all of our trees to create a final prediction. 

### Question Three: What is meant by a general linear model?

A general linear model does not necessarily assume that there is a linear relationship between the explanatory variable(s) and the response, but it assumes that there is a linear relationship between the explanatory variable(s) and the transformed response. This transformation is also referred to as the link function.

### Question Four: When fitting a multiple linear regression model, what does adding an interaction term do? That is, what does it allow the model to do differently as compared to when it is not included in the model?

An interaction term allows the model to account for the fact that the impact of an explanatory variable A on the response Y may be different at different levels of another explanatory variable B. Otherwise, the impacts of the two explanatory variables A and B will be independent and constant regardless of each other's values. 

### Question Five: Why do we split our data into a training and test set?

Splitting into a training and test set is important to maintain independence. If a model is trained and tested on the same data, it is obvious that the model will be a good fit to that data. We are actually curious about how the model performs on new data, so it is important to choose either to use the data for training or for testing but not both. 

## Task Two: Data Prep

### Packages and data

```{r, warning=FALSE, message=FALSE}
#loading required packages
library("tidyverse")
library("tidymodels")
library("caret")
library("yardstick")

#reading in the heart data
heartdata <- read_csv("https://www4.stat.ncsu.edu/~online/datasets/heart.csv")
```

### Question One

```{r}
summary(heartdata) #creating a summary for all variables in the heart data
```

#### a. What type of variable (in R) is Heart Disease? Categorical or Quantitative?

Heart Disease is a numerical (integer) variable. It is quantitative rather than categorical, and R is assuming that all numeric values between 0 and 1 are valid. We know this because a numerical summary is presented for the Heart Disease variable. 

#### b. Does this make sense? Why or why not.

This does not make sense because a person has either been diagnosed with heart disease or they have not. Therefore, Heart Disease should be a categorical variable rather than a numeric. Heart Disease should be a factor variable with the levels 1 (indicating the person has been diagnosed with heart disease) and 0 (indicating the person has not been diagnosed with heart disease).

### Question Two

```{r}
#Creating a new heart tibble
new_heart <- heartdata |> #using the initial tibble
  mutate(new_hd = as.factor(HeartDisease)) |> #creating a new factor heart disease variable
  select(-c(ST_Slope, HeartDisease)) #removing ST_Slope and old heart disease variable
```

### Task Three: EDA

#### Question One

```{r}
g <- ggplot(new_heart, aes(x = MaxHR, y = Age, color = new_hd)) + geom_point() + geom_smooth(method=lm, se=FALSE) + labs(title = "Age by Max Heart Rate", x = "Max Heart Rate", y = "Age")
g
```

#### Question Two: Based on visual evidence, do you think an interaction model or an additive model is
more appropriate? Justify your answer.

Based on this plot, an interaction model is more appropriate because the two lines are not parallel. That indicates that whether or not heart disease is present impacts the effect that maximum heart rate has on our response variable age, and therefore an interaction term is necessary. 

### Task Four: Testing and Training

```{r}
set.seed(101) #setting a random seed so this process can be duplicated
heart_split <- initial_split(new_heart, prop = 0.80) #specifying a 80/20 split
heart_train <- training(heart_split) #splitting training data
heart_test <- testing(heart_split) #splitting testing data
```

### Task Five: OLS and LASSO

```{r}
ols_mlr <- lm(Age ~ MaxHR + new_hd + MaxHR:new_hd, data = new_heart)

summary(ols_mlr)
```

```{r}
RMSE_calc <- sqrt(mean((heart_test$Age - predict(ols_mlr))^2))
RMSE_calc
```



### Task Six: Logistic Regression